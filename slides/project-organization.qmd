# {{< fa folder >}} &nbsp;Project organization

## First things first


> « There are only two hard things in Computer Science: cache invalidation and **naming things**. »

::: {.citation}
Phil Karlton
:::

. . .

<br/>


**Three principles for naming files**[^anna]

:::: { .columns }
::: {.column width="50%"}
1. **Human readable**
:::
::: {.column width="50%"}
- Name contains information on the content
- Respect concept of [slug](https://en.wikipedia.org/wiki/Clean_URL#Slug) from semantic URLs
:::
::::

[^anna]: <https://annakrystalli.me/rrresearchACCE20/slides/03_filenaming.html>


## First things first



> « There are only two hard things in Computer Science: cache invalidation and **naming things**. »

::: {.citation}
Phil Karlton
:::


<br/>


**Three principles for naming files**[^anna]

:::: { .columns }
::: {.column width="50%"}
1. Human readable
1. **Machine readable**
:::
::: {.column width="50%"}
- Regular expression and globbing friendly
  - avoid space and accented characters
  - good use of punctuation and case
:::
::::



## First things first


> « There are only two hard things in Computer Science: cache invalidation and **naming things**. »

::: {.citation}
Phil Karlton
:::


<br/>


**Three principles for naming files**[^anna]

:::: { .columns }
::: {.column width="50%"}
1. Human readable
1. **Machine readable**
:::
::: {.column width="50%"}
```{r}
#| echo: true
# File names ----
files <- c("2020-survey_A.csv", "2021-survey_A.csv", "2021-survey_B.csv")

# Extract years ----
strsplit(files, "-") |>              # Split string by '-'
  lapply(function(x) x[1]) |>        # Get the first element
  unlist() |>                        # Convert to vector
  as.numeric()                       # Convert to numeric
```
:::
::::


## First things first


> « There are only two hard things in Computer Science: cache invalidation and **naming things**. »

::: {.citation}
Phil Karlton
:::


<br/>


**Three principles for naming files**[^anna]

:::: { .columns }
::: {.column width="50%"}
1. Human readable
1. **Machine readable**
:::
::: {.column width="50%"}
```{r}
#| echo: true
# File names ----
files <- c("2020-survey_A.csv", "2021-survey_A.csv", "2021-survey_B.csv")

# Extract years ----
strsplit(files, "-") |>              # Split string by '-'
  lapply(function(x) x[1]) |>        # Get the first element
  unlist() |>                        # Convert to vector
  as.numeric()                       # Convert to numeric
```

<br/>

```{r}
#| echo: true
# Extract surveys ----
strsplit(files, "-") |>              # Split string by '-'
  lapply(function(x) x[2]) |>        # Get the second element
  unlist() |>                        # Convert to vector
  gsub("survey_|\\.csv", "", x = _)  # Clean output
```
:::
::::



## First things first


> « There are only two hard things in Computer Science: cache invalidation and **naming things**. »

::: {.citation}
Phil Karlton
:::


<br/>


**Three principles for naming files**[^anna]

:::: { .columns }
::: {.column width="50%"}
1. Human readable
1. Machine readable
1. **Play well with default ordering**
:::
::: {.column width="50%"}
```{r}
#| echo: true
# File names ----
files <- c("1-survey_A.csv", "2-survey_B.csv", "10-survey_C.csv")

# Sort file names ----
sort(files)
```
:::
::::


## First things first


> « There are only two hard things in Computer Science: cache invalidation and **naming things**. »

::: {.citation}
Phil Karlton
:::


<br/>


**Three principles for naming files**[^anna]

:::: { .columns }
::: {.column width="50%"}
1. Human readable
1. Machine readable
1. **Play well with default ordering**
:::
::: {.column width="50%"}
```{r}
#| echo: true
# File names ----
files <- c("1-survey_A.csv", "2-survey_B.csv", "10-survey_C.csv")

# Sort file names ----
sort(files)
```

<br/>

```{r}
#| echo: true
# File names ----
files <- c("01-survey_A.csv", "02-survey_B.csv", "10-survey_C.csv")

# Sort file names ----
sort(files)
```
:::
::::



## First things first


> « There are only two hard things in Computer Science: cache invalidation and **naming things**. »

::: {.citation}
Phil Karlton
:::


<br/>


**Three principles for naming files**[^anna]

:::: { .columns }
::: {.column width="50%"}
1. Human readable
1. Machine readable
1. **Play well with default ordering**
:::
::: {.column width="50%"}
![_Source:_ [xkcd](https://xkcd.com/1179/)](https://imgs.xkcd.com/comics/iso_8601.png){width="50%"}
:::
::::


## Naming variables


{{< fa hand-point-right >}} &nbsp;Be consistent and follow the guidelines of your community


![<https://allisonhorst.com/other-r-fun>](img/cases.png){width="50%"}




## RStudio Project

Use the power of RStudio Project

```
File > New Project...
```

:::: { .columns }
::: { .column width="50%"}
![](img/rstudio-project.png){width="80%" fig-align="left"}
:::

::: { .column width="50%"}
![](img/rstudio-newproject.png){width="80%" fig-align="left"}
:::
::::

. . .

RStudio IDE will create a `.Rproj` (simple text file) file at the root of the folder

- Double-click on a `.Rproj` file to open a fresh instance of RStudio, w/ the working directory pointed at the folder root
- This will help you to create self-contained workspace (_compendium_)

{{< fa hand-point-right >}} &nbsp;In a few slides, we will talk about `setwd()`


## In the meantime

RStudio IDE - Minimal configuration for a better reproducibility

```
Tools > Global options > General
```

:::: { .columns }
::: { .column width="50%"}
![](img/rstudio-ideconfig.png){width="80%" fig-align="left"}
:::

::: { .column width="50%"}
- **Never** save your workspace as `.RData`<br>
{{< fa hand-point-right >}} &nbsp;Decide what you want to save and use<br>
`save()`, `saveRDS()`, `write.csv()`, etc.
:::
::::


## In the meantime

RStudio IDE - Minimal configuration for a better reproducibility

```
Tools > Global options > General
```

:::: { .columns }
::: { .column width="50%"}
![](img/rstudio-ideconfig.png){width="80%" fig-align="left"}
:::

::: { .column width="50%"}
- **Never** save your workspace as `.RData`<br>
{{< fa hand-point-right >}} &nbsp;Decide what you want to save and use<br>
`save()`, `saveRDS()`, `write.csv()`, etc.

<br>

- **Never** save your command history<br>
{{< fa hand-point-right >}} &nbsp;Write your code in scripts not in the console
:::
::::


## In the meantime

RStudio IDE - Minimal configuration for a better reproducibility

```
Tools > Global options > General
```

:::: { .columns }
::: { .column width="50%"}
![](img/rstudio-ideconfig.png){width="80%" fig-align="left"}
:::

::: { .column width="50%"}
- **Never** save your workspace as `.RData`<br>
{{< fa hand-point-right >}} &nbsp;Decide what you want to save and use<br>
`save()`, `saveRDS()`, `write.csv()`, etc.

<br>

- **Never** save your command history<br>
{{< fa hand-point-right >}} &nbsp;Write your code in scripts not in the console

<br>

Follow these two recommendations and use RStudio Project, and you'll[^wtf]:

- never use again `rm(list = ls())`
- never use again `setwd()`
:::
::::


[^wtf]: <https://rstats.wtf/projects.html>

## Relative vs absolute paths


## Research compendium

